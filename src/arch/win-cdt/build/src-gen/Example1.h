/** Generated by YAKINDU Statechart Tools code generator. */

#ifndef EXAMPLE1_H_
#define EXAMPLE1_H_

#include "..\src\sc_types.h"

#ifdef __cplusplus
extern "C" { 
#endif 

/*! \file Header of the state machine 'example1'.
*/

/*! Define number of states in the state enum */

#define EXAMPLE1_STATE_COUNT 1

/*! Define dimension of the state configuration vector for orthogonal states. */
#define EXAMPLE1_MAX_ORTHOGONAL_STATES 1


/*! Define indices of states in the StateConfVector */
#define SCVI_EXAMPLE1_MAIN_REGION_S1 0

/*! Enumeration of all states */ 
typedef enum
{
	Example1_last_state,
	Example1_main_region_S1
} Example1States;




/*! 
 * Type definition of the data structure for the Example1 state machine.
 * This data structure has to be allocated by the client code. 
 */
typedef struct
{
	Example1States stateConfVector[EXAMPLE1_MAX_ORTHOGONAL_STATES];
	sc_ushort stateConfVectorPosition; 
	
} Example1;



/*! Initializes the Example1 state machine data structures. Must be called before first usage.*/
extern void example1_init(Example1* handle);

/*! Activates the state machine */
extern void example1_enter(Example1* handle);

/*! Deactivates the state machine */
extern void example1_exit(Example1* handle);

/*! Performs a 'run to completion' step. */
extern void example1_runCycle(Example1* handle);



/*!
 * Checks whether the state machine is active (until 2.4.1 this method was used for states).
 * A state machine is active if it was entered. It is inactive if it has not been entered at all or if it has been exited.
 */
extern sc_boolean example1_isActive(const Example1* handle);

/*!
 * Checks if all active states are final. 
 * If there are no active states then the state machine is considered being inactive. In this case this method returns false.
 */
extern sc_boolean example1_isFinal(const Example1* handle);

/*! Checks if the specified state is active (until 2.4.1 the used method for states was called isActive()). */
extern sc_boolean example1_isStateActive(const Example1* handle, Example1States state);


#ifdef __cplusplus
}
#endif 

#endif /* EXAMPLE1_H_ */
